{"version":3,"file":"index.js","sources":["../../../src/client/utils/matchContent.ts","../../../src/client/utils/result.ts","../../../src/client/worker/index.ts"],"sourcesContent":["export type Word = [tag: string, content: string] | string;\n\nconst MAX_LENGTH = 100;\nconst SUFFIX_LENGTH = 20;\n\nexport const getMatchedContent = (\n  content: string,\n  queryString: string\n): Word[] | null => {\n  const contentLowerCase = content.toLowerCase();\n  const queryStringLowerCase = queryString.toLowerCase();\n  const result: Word[] = [];\n\n  let startIndex = 0;\n  let contentLength = 0;\n\n  const addResult = (content: string, isEnd = false): void => {\n    let text = \"\";\n\n    // a beginning of a long string\n    if (contentLength === 0)\n      text =\n        content.length > SUFFIX_LENGTH\n          ? `… ${content.slice(-SUFFIX_LENGTH)}`\n          : content;\n    // already the last text\n    else if (isEnd)\n      text =\n        // if the string will be longer than maxLength\n        content.length + contentLength > MAX_LENGTH\n          ? `${content.slice(0, MAX_LENGTH - contentLength)}… `\n          : content;\n    // text is at the middle\n    else\n      text =\n        content.length > SUFFIX_LENGTH\n          ? `${content.slice(0, SUFFIX_LENGTH)} … ${content.slice(\n              -SUFFIX_LENGTH\n            )}`\n          : content;\n\n    if (text) result.push(text);\n    contentLength += text.length;\n\n    if (!isEnd) {\n      result.push([\"strong\", queryString]);\n      contentLength += queryString.length;\n\n      if (contentLength >= MAX_LENGTH) result.push(\" …\");\n    }\n  };\n\n  let matchIndex = contentLowerCase.indexOf(queryStringLowerCase, startIndex);\n\n  if (matchIndex === -1) return null;\n\n  while (matchIndex >= 0) {\n    const endIndex = matchIndex + queryStringLowerCase.length;\n\n    // append content before\n    addResult(content.slice(startIndex, matchIndex));\n\n    startIndex = endIndex;\n\n    if (contentLength > MAX_LENGTH) break;\n\n    matchIndex = contentLowerCase.indexOf(queryStringLowerCase, startIndex);\n  }\n\n  if (contentLength < MAX_LENGTH) addResult(content.slice(startIndex), true);\n\n  return result;\n};\n","import { entries, keys } from \"vuepress-shared/client\";\n\nimport { type Word, getMatchedContent } from \"./matchContent.js\";\nimport { type LocaleIndex } from \"../../shared/index.js\";\n\nexport interface TitleMatchedItem {\n  type: \"title\";\n  display: Word[];\n  path: string;\n}\n\nexport interface HeadingMatchedItem {\n  type: \"heading\";\n  display: Word[];\n  path: string;\n}\n\nexport interface CustomMatchedItem {\n  type: \"custom\";\n  path: string;\n  index: string;\n  display: Word[];\n}\n\nexport interface ContentMatchedItem {\n  type: \"content\";\n  path: string;\n  header: string;\n  display: Word[];\n}\n\nexport type MatchedItem =\n  | TitleMatchedItem\n  | HeadingMatchedItem\n  | ContentMatchedItem\n  | CustomMatchedItem;\n\nexport interface Result {\n  title: string;\n  contents: MatchedItem[];\n}\n\nconst getResultsWeight = (matchedItem: MatchedItem[]): number =>\n  matchedItem.reduce<number>(\n    (current, { type }) =>\n      current +\n      (type === \"title\"\n        ? 50\n        : type === \"heading\"\n        ? 20\n        : type === \"custom\"\n        ? 10\n        : 1),\n    0\n  );\n\nexport const getResults = (\n  queryString: string,\n  localeIndex: LocaleIndex\n): Result[] => {\n  const suggestions = <Record<string, MatchedItem[]>>{};\n\n  for (const [path, pageIndex] of entries(localeIndex)) {\n    const parentPageTitle =\n      localeIndex[path.replace(/\\/[^\\\\]*$/, \"\")]?.title || \"\";\n    const title = `${parentPageTitle ? `${parentPageTitle} > ` : \"\"}${\n      pageIndex.title\n    }`;\n\n    const titleContent = getMatchedContent(pageIndex.title, queryString);\n\n    if (titleContent)\n      suggestions[title] = [\n        ...(suggestions[title] || []),\n        {\n          type: \"title\",\n          path,\n          display: titleContent,\n        },\n      ];\n\n    if (pageIndex.customFields)\n      entries(pageIndex.customFields).forEach(([index, customFields]) => {\n        customFields.forEach((customField) => {\n          const customFieldContent = getMatchedContent(\n            customField,\n            queryString\n          );\n\n          if (customFieldContent)\n            suggestions[title] = [\n              ...(suggestions[title] || []),\n              {\n                type: \"custom\",\n                path,\n                index,\n                display: customFieldContent,\n              },\n            ];\n        });\n      });\n\n    for (const headerIndex of pageIndex.contents) {\n      const headerContent = getMatchedContent(headerIndex.header, queryString);\n\n      if (headerContent)\n        suggestions[title] = [\n          ...(suggestions[title] || []),\n          {\n            type: \"heading\",\n            path: path + (headerIndex.slug ? `#${headerIndex.slug}` : \"\"),\n            display: headerContent,\n          },\n        ];\n\n      for (const content of headerIndex.contents) {\n        const matchedContent = getMatchedContent(content, queryString);\n\n        if (matchedContent)\n          suggestions[title] = [\n            ...(suggestions[title] || []),\n            {\n              type: \"content\",\n              header: headerIndex.header,\n              path: path + (headerIndex.slug ? `#${headerIndex.slug}` : \"\"),\n              display: matchedContent,\n            },\n          ];\n      }\n    }\n  }\n\n  return keys(suggestions)\n    .sort(\n      (titleA, titleB) =>\n        getResultsWeight(suggestions[titleA]) -\n        getResultsWeight(suggestions[titleB])\n    )\n    .map((title) => ({ title, contents: suggestions[title] }));\n};\n","import { atou } from \"vuepress-shared/client\";\n\nimport { database } from \"@temp/search-pro/database\";\n\nimport { type SearchIndex } from \"../../shared/index.js\";\nimport { getResults } from \"../utils/index.js\";\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare const __VUEPRESS_DEV__: boolean;\ndeclare const __VUE_HMR_RUNTIME__: Record<string, unknown>;\n\nlet searchIndex = <SearchIndex>JSON.parse(atou(database));\n\n// @ts-ignore\nif (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot))\n  __VUE_HMR_RUNTIME__[\"updateSearchProDatabase\"] = (database: string): void => {\n    searchIndex = <SearchIndex>JSON.parse(atou(database));\n  };\n\nself.onmessage = ({\n  data,\n}: MessageEvent<{ query: string; routeLocale: string }>): void => {\n  self.postMessage(getResults(data.query, searchIndex[data.routeLocale]));\n};\n"],"names":["getMatchedContent","content","queryString","contentLowerCase","queryStringLowerCase","result","startIndex","contentLength","addResult","isEnd","text","matchIndex","endIndex","getResultsWeight","matchedItem","current","type","getResults","localeIndex","_a","suggestions","path","pageIndex","entries","parentPageTitle","title","titleContent","index","customFields","customField","customFieldContent","headerIndex","headerContent","matchedContent","keys","titleA","titleB","searchIndex","atou","database","data"],"mappings":"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"}