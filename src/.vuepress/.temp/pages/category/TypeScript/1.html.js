export const data = JSON.parse("{\"key\":\"v-336246ba\",\"path\":\"/category/TypeScript/1.html\",\"title\":\"TypeScript程序员晋级的11个必备技巧\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"TypeScript程序员晋级的11个必备技巧\",\"lang\":\"zh-CN\",\"date\":\"2022-04-13T14:55:00.000Z\",\"author\":\"XXXWeii\",\"category\":[\"TypeScript\"],\"tag\":[\"TypeScript\"],\"description\":\"当你学习 TypeScript 时，你的第一印象可能会欺骗你：这不就是 JavaScript 注解的一种方式吗？不就是编译器用来帮助我找到潜在 bug 的吗？ 虽然这种说法没错，但随着你对 TypeScript 不断了解，你会发现这门编程语言最不可思议的力量在于编写、推断和操作数据类型。 本文总结的一些技巧，可以帮助大家充分发挥 TypeScript 的潜力。 #1 用集合的概念思考问题 数据类型是程序员日常要处理的概念，但要简洁地定义它却出奇地困难。然而我发现集合非常适合用作概念模型。 刚开始学习 TypeScript 时，我们常常会发现用 TypeScript 编写类型的方式很不自然。举一个非常简单的例子：\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/XXXWeii/vuepress2-myblog/vuepress2-myblog/category/TypeScript/1.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"XXXWeii\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"TypeScript程序员晋级的11个必备技巧\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"当你学习 TypeScript 时，你的第一印象可能会欺骗你：这不就是 JavaScript 注解的一种方式吗？不就是编译器用来帮助我找到潜在 bug 的吗？ 虽然这种说法没错，但随着你对 TypeScript 不断了解，你会发现这门编程语言最不可思议的力量在于编写、推断和操作数据类型。 本文总结的一些技巧，可以帮助大家充分发挥 TypeScript 的潜力。 #1 用集合的概念思考问题 数据类型是程序员日常要处理的概念，但要简洁地定义它却出奇地困难。然而我发现集合非常适合用作概念模型。 刚开始学习 TypeScript 时，我们常常会发现用 TypeScript 编写类型的方式很不自然。举一个非常简单的例子：\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"XXXWeii\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"TypeScript\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-04-13T14:55:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"TypeScript程序员晋级的11个必备技巧\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2022-04-13T14:55:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"XXXWeii\\\"}]}\"]]},\"headers\":[],\"readingTime\":{\"minutes\":9.97,\"words\":2990},\"filePathRelative\":\"category/TypeScript/1.md\",\"localizedDate\":\"2022年4月13日\",\"excerpt\":\"<p>当你学习 TypeScript 时，你的第一印象可能会欺骗你：这不就是 JavaScript 注解的一种方式吗？不就是编译器用来帮助我找到潜在 bug 的吗？</p>\\n<p>虽然这种说法没错，但随着你对 TypeScript 不断了解，你会发现这门编程语言最不可思议的力量在于编写、推断和操作数据类型。</p>\\n<p>本文总结的一些技巧，可以帮助大家充分发挥 TypeScript 的潜力。</p>\\n<h2> #1 用集合的概念思考问题</h2>\\n<hr>\\n<p>数据类型是程序员日常要处理的概念，但要简洁地定义它却出奇地困难。然而我发现集合非常适合用作概念模型。</p>\\n<p>刚开始学习 TypeScript 时，我们常常会发现用 TypeScript 编写类型的方式很不自然。举一个非常简单的例子：</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
