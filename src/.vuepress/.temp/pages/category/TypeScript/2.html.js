export const data = JSON.parse("{\"key\":\"v-35171f59\",\"path\":\"/category/TypeScript/2.html\",\"title\":\"12个Typescript开发实用技巧清单\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"12个Typescript开发实用技巧清单\",\"lang\":\"zh-CN\",\"date\":\"2022-04-22T14:55:00.000Z\",\"author\":\"XXXWeii\",\"category\":[\"TypeScript\"],\"tag\":[\"TypeScript\"],\"description\":\"Typescript 在类型检查方面非常强大，但有时某些类型是其他类型的子集并且需要为它们定义类型检查时，它会变得乏味。 举个例子，有两种响应类型： 用户配置文件响应 interface UserProfileResponse { id: number; name: string; email: string; phone: string; avatar: string; }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/XXXWeii/vuepress2-myblog/vuepress2-myblog/category/TypeScript/2.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"XXXWeii\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"12个Typescript开发实用技巧清单\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Typescript 在类型检查方面非常强大，但有时某些类型是其他类型的子集并且需要为它们定义类型检查时，它会变得乏味。 举个例子，有两种响应类型： 用户配置文件响应 interface UserProfileResponse { id: number; name: string; email: string; phone: string; avatar: string; }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-06-01T12:51:48.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"XXXWeii\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"TypeScript\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-04-22T14:55:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-06-01T12:51:48.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"12个Typescript开发实用技巧清单\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2022-04-22T14:55:00.000Z\\\",\\\"dateModified\\\":\\\"2023-06-01T12:51:48.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"XXXWeii\\\"}]}\"]]},\"headers\":[],\"git\":{\"createdTime\":1685623908000,\"updatedTime\":1685623908000,\"contributors\":[{\"name\":\"zjw977020546\",\"email\":\"11487928+zjw977020546@user.noreply.gitee.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":2.86,\"words\":859},\"filePathRelative\":\"category/TypeScript/2.md\",\"localizedDate\":\"2022年4月22日\",\"excerpt\":\"<p>Typescript 在类型检查方面非常强大，但有时某些类型是其他类型的子集并且需要为它们定义类型检查时，它会变得乏味。</p>\\n<p>举个例子，有两种响应类型：</p>\\n<h2> 用户配置文件响应</h2>\\n<hr>\\n<div class=\\\"language-typescript line-numbers-mode\\\" data-ext=\\\"ts\\\"><pre class=\\\"language-typescript\\\"><code><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">UserProfileResponse</span> <span class=\\\"token punctuation\\\">{</span>\\n  id<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  email<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  phone<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  avatar<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
